# Local Volume Provisioner for RAGFlow
# 专门为带有 ragflow=true 标签的节点提供本地存储

---
# Local Volume Provisioner DaemonSet
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: local-volume-provisioner
  namespace: ragflow
  labels:
    app: local-volume-provisioner
spec:
  selector:
    matchLabels:
      app: local-volume-provisioner
  template:
    metadata:
      labels:
        app: local-volume-provisioner
    spec:
      # 只在带有 ragflow=true 标签的节点上运行
      nodeSelector:
        ragflow: "true"
      serviceAccountName: local-storage-admin
      containers:
      - name: provisioner
        image: quay.io/external_storage/local-volume-provisioner:v2.5.0
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/provisioner/config
          name: provisioner-config
          readOnly: true
        - mountPath: /mnt/disks
          name: local-disks
          mountPropagation: "HostToContainer"
        env:
        - name: MY_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: MY_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: JOB_CONTAINER_IMAGE
          value: "quay.io/external_storage/local-volume-provisioner:v2.5.0"
      volumes:
      - name: provisioner-config
        configMap:
          name: local-volume-provisioner-config
      - name: local-disks
        hostPath:
          path: /mnt/disks
---
# ConfigMap for provisioner
apiVersion: v1
kind: ConfigMap
metadata:
  name: local-volume-provisioner-config
  namespace: ragflow
data:
  storageClassMap: |
    ragflow-local-storage:
      hostDir: /mnt/disks
      mountDir: /mnt/disks
      blockCleanerCommand:
        - "/scripts/shred.sh"
        - "2"
      volumeMode: Filesystem
      fsType: ext4
---
# StorageClass for RAGFlow
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: ragflow-local-storage
  annotations:
    storageclass.kubernetes.io/is-default-class: "false"
    description: "RAGFlow本地存储类，自动发现本地目录"
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
reclaimPolicy: Delete
---
# ServiceAccount for provisioner
apiVersion: v1
kind: ServiceAccount
metadata:
  name: local-storage-admin
  namespace: ragflow
---
# ClusterRole for provisioner
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: local-storage-provisioner-pv-binding
rules:
- apiGroups: [""]
  resources: ["persistentvolumes"]
  verbs: ["get", "list", "watch", "update", "patch"]
- apiGroups: [""]
  resources: ["persistentvolumeclaims"]
  verbs: ["get", "list", "watch", "update"]
- apiGroups: ["storage.k8s.io"]
  resources: ["storageclasses"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["watch"]
- apiGroups: [""]
  resources: ["endpoints"]
  resourceNames: ["kube-controller-manager"]
  verbs: ["get", "update"]
- apiGroups: [""]
  resources: ["endpoints"]
  verbs: ["create", "get", "update"]
---
# ClusterRoleBinding for provisioner
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: local-storage-provisioner-pv-binding
subjects:
- kind: ServiceAccount
  name: local-storage-admin
  namespace: ragflow
roleRef:
  kind: ClusterRole
  name: local-storage-provisioner-pv-binding
  apiGroup: rbac.authorization.k8s.io
